{"version":3,"sources":["components/Container.js","components/Header.js","components/InputTask.js","components/Task.js","components/TaskContent.js","App.js","reportWebVitals.js","index.js"],"names":["Container","children","text","Header","className","as","icon","textAlign","color","Icon","inverted","name","circular","Content","options","key","value","InputTask","props","useState","idTask","taskName","categoryTask","task","setTask","error","setError","createTask","Grid","centered","columns","Input","type","action","size","placeholder","iconPosition","onChange","e","target","Select","compact","data","Button","onClick","preventDefault","trim","uuidv4","Task","deleteTask","Column","width","Segment","Label","ribbon","TaskContent","tasks","length","Row","map","index","App","initialTask","JSON","parse","localStorage","getItem","setTasks","useEffect","setItem","stringify","id","currentTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d59714d.chunk.js","sourcesContent":["import { Container as ContainerContent} from \"semantic-ui-react\";\r\n\r\nfunction Container({ children }) {\r\n    return (\r\n        <ContainerContent text>\r\n            {children}\r\n        </ContainerContent>\r\n    )\r\n}\r\n\r\nexport default Container","import { Header as Head, Icon } from \"semantic-ui-react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <Head as=\"h1\" icon textAlign=\"center\" color=\"violet\">\r\n                    <Icon inverted color=\"violet\" name=\"list alternate outline\" circular />\r\n                    <Head.Content>Listado de tareas</Head.Content>\r\n                </Head>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header","import {Button, Grid, Header, Icon, Input, Select} from \"semantic-ui-react\";\r\nimport {useState} from \"react\";\r\nimport {v4 as uuidv4} from \"uuid\";\r\n\r\nconst options = [\r\n    {key: \"deporte\", text: \"Deporte\", value: \"deporte\"},\r\n    {key: \"casa\", text: \"Casa\", value: \"casa\"},\r\n    {key: \"oficina\", text: \"Oficina\", value: \"oficina\"},\r\n    {key: \"otra\", text: \"Otra\", value: \"otra\"},\r\n];\r\n\r\nfunction InputTask(props) {\r\n    const [task, setTask] = useState({\r\n        idTask: \"\",\r\n        taskName: \"\",\r\n        categoryTask: \"\",\r\n    });\r\n    const [error, setError] = useState(false);\r\n\r\n    const {createTask} = props;\r\n\r\n    const onChangeTask = (e) => {\r\n        setTask({\r\n            ...task,\r\n            [e.target.name]: e.target.value,\r\n        });\r\n    };\r\n\r\n    const onChangeCategoryTask = (e, data) => {\r\n        setTask({\r\n            ...task,\r\n            [data.name]: data.value,\r\n        });\r\n    };\r\n\r\n    const onSubmitTask = (e) => {\r\n        // que no recargue la página\r\n        e.preventDefault();\r\n\r\n        // validación\r\n        if (task.taskName.trim() === \"\") {\r\n            setError(true);\r\n            return;\r\n        }\r\n\r\n        // eliminar el mensaje previo\r\n        setError(false);\r\n\r\n        // asignar un ID\r\n        task.idTask = uuidv4();\r\n\r\n        // crear la tarea\r\n        createTask(task);\r\n\r\n        // limpiar los inputs\r\n        setTask({\r\n            idTask: \"\",\r\n            taskName: \"\",\r\n            categoryTask: \"\",\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid centered columns={2}>\r\n                <Input type=\"text\" action>\r\n                    <Input\r\n                        size=\"small\"\r\n                        icon=\"add\"\r\n                        placeholder=\"Escribe tu tarea...\"\r\n                        iconPosition=\"left\"\r\n                        name=\"taskName\"\r\n                        value={task.taskName}\r\n                        onChange={onChangeTask}\r\n                    />\r\n                    <Select\r\n                        compact\r\n                        options={options}\r\n                        className=\"select-form-task\"\r\n                        name=\"categoryTask\"\r\n                        placeholder=\"Categoria\"\r\n                        value={task.categoryTask}\r\n                        onChange={onChangeCategoryTask}\r\n                    />\r\n                    {/*<p>Modificando nuestro proyecto</p>*/}\r\n                    <Button type=\"submit\" color=\"violet\" onClick={onSubmitTask}>\r\n                        Añadir tarea\r\n                    </Button>\r\n                </Input>\r\n            </Grid>\r\n            {\r\n                error && (\r\n                    <Grid centered>\r\n                        <Header as=\"h4\" color=\"red\" className=\"alert-error-form\">\r\n                            <Icon name=\"close\"/>\r\n                            <Header.Content>La tarea es obligatoria</Header.Content>\r\n                            <Icon name=\"close\"/>\r\n                        </Header>\r\n                    </Grid>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InputTask","import {Grid, Header, Icon, Button, Segment, Label} from \"semantic-ui-react\";\r\n\r\nfunction Task({task, deleteTask}) {\r\n\r\n    const {idTask, taskName, categoryTask} = task\r\n\r\n    return (\r\n        <Grid.Column width={8} className=\"task-container\">\r\n            <Segment>\r\n                {categoryTask && (\r\n                    <Label color=\"teal\" ribbon=\"right\">\r\n                        {categoryTask}\r\n                    </Label>\r\n                )}\r\n                <Header as=\"h3\" className=\"header-task\">\r\n                    {taskName}\r\n                </Header>\r\n                <Header as=\"h5\">{idTask}</Header>\r\n                <Grid centered columns={2}>\r\n                    <Grid.Column>\r\n                        <Button color=\"red\" onClick={() => deleteTask(idTask)}>\r\n                            <Icon name=\"remove circle\" /> Eliminar\r\n                        </Button>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Grid.Column>\r\n    )\r\n}\r\n\r\nexport default Task","import { Header, Icon, Grid } from \"semantic-ui-react\";\r\nimport Task from \"./Task\";\r\n\r\nfunction TaskContent({tasks, deleteTask}) {\r\n\r\n    if (tasks.length === 0){\r\n        return null\r\n    }\r\n    return (\r\n        <>\r\n            <Grid className=\"tasks-content\">\r\n                <Header as=\"h2\" icon textAlign=\"center\">\r\n                    <Icon name=\"settings\" />\r\n                    Administra tus tareas\r\n                </Header>\r\n                <Grid.Row>\r\n                    {\r\n                        tasks.map((task, index) => (\r\n                            <Task key={task.idTask} task={task} deleteTask={deleteTask} />\r\n                        ))\r\n                    }\r\n                </Grid.Row>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskContent","import './App.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport Container from \"./components/Container\";\nimport Header from \"./components/Header\";\nimport InputTask from \"./components/InputTask\";\nimport {useEffect, useState} from \"react\";\nimport TaskContent from \"./components/TaskContent\";\n\nfunction App() {\n\n    let initialTask = JSON.parse(localStorage.getItem(\"tasks\"))\n    if (!initialTask){\n        initialTask = []\n    }\n\n    const [tasks, setTasks] = useState(initialTask);\n\n    useEffect(() => {\n       if (initialTask){\n           localStorage.setItem('tasks', JSON.stringify(tasks))\n       }else{\n           localStorage.setItem('tasks', JSON.stringify([]))\n       }\n    }, [initialTask, tasks]);\n\n\n    const createTask = (task) => {\n        setTasks([\n            ...tasks,\n            task\n        ])\n    }\n\n    const deleteTask  = (id) => {\n        const currentTask = tasks.filter((task) => task.idTask !== id)\n        setTasks(currentTask)\n    }\n\n    return (\n        <Container>\n            <Header />\n            <InputTask createTask={createTask} />\n            <TaskContent tasks={tasks} deleteTask={deleteTask} />\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}